{"version":3,"sources":["Component/DropDown.js","Component/DisplayStatus.js","App.js","serviceWorker.js","index.js"],"names":["DropDown","state","postCode","showDropdownMenu","bind","hideDropdownMenu","handleDropdownChange","event","preventDefault","this","setState","displayMenu","document","addEventListener","e","selecteditem","target","value","props","getStatusFunc","removeEventListener","className","onClick","name","label","id","onChange","itemList","map","item","React","Component","DisplayStatus","handleClick","status","updateStatusFunc","storeId","disableButton","type","store","disabled","align","date","moment","require","App","itemID","itemName","storeList","getStatus","tempItemName","tempItemId","axios","get","then","response","console","log","data","itemData","catch","error","itemId","updateStatus","dateTime","format","dateTimeFormatted","put","storeListCopy","slice","quantity","dateformatted","editItems","key","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.c411d33d.chunk.js","sourcesContent":["import React from 'react';\n\n\n\nclass DropDown extends React.Component {\n    constructor() {\n\n        super();\n        this.state = {\n            postCode : \"M33\"\n            \n        };\n\n        this.showDropdownMenu = this.showDropdownMenu.bind(this);\n        this.hideDropdownMenu = this.hideDropdownMenu.bind(this);\n        this.handleDropdownChange = this.handleDropdownChange.bind(this);\n    };\n\n    showDropdownMenu(event) {\n        event.preventDefault();\n        this.setState({ displayMenu: true }, () => {\n            document.addEventListener('click', this.hideDropdownMenu);\n        });\n    }\n\n    handleDropdownChange(e) {\n\n        this.setState({ selecteditem: e.target.value });\n        this.props.getStatusFunc(e.target.value, this.state.postCode);\n    }\n\n    hideDropdownMenu() {\n    \n\n        this.setState({ displayMenu: false }, () => {\n            document.removeEventListener('click', this.hideDropdownMenu);\n        });\n    }\n\n    render() {\n        return (\n\n            <div>\n                <div className=\"button\"\n                    onClick={this.showDropdownMenu} >\n                    {/* {this.props.label} */}\n                </div>\n                <select name={this.props.label} id=\"dropdown\" onChange={this.handleDropdownChange}>\n                    <option> CHOOSE AN ITEM </option>\n                    {this.props.itemList.map(item => {\n                        return <option value={item.name} id={item.id}> {item.name} </option>\n                    })}\n                </select>\n            </div>\n\n        );\n    }\n}\n\nexport default DropDown;\n","import React from 'react';\n\nclass DisplayStatus extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            \n        }\n    }\n\n    handleClick = (status) => {\n//call an update function to update the details\n        this.props.updateStatusFunc(this.props.storeId, status);\n        \n    }\n\n    disableButton = (type) => {\n        // If the edit button has been press enable the buttons\n        if (this.props.disableButton === false){\n            return false;\n        }\n        //Check to see which button to highlight\n        if (type === \"Lots\" && this.props.status === \"L\"){\n            return false;\n        }\n        if (type === \"Some\" && this.props.status === \"S\"){\n            return false;\n        }\n        if (type === \"None\" && this.props.status === \"N\"){\n            return false;\n        }\n\n        return true;\n    }\n    render() {\n        return (  \n    \n                <div className=\"row\">\n                    <div className=\"col-12 col-lg-3\">\n                        <h5> {this.props.store}  </h5>\n                    </div>\n                    \n                    <div className=\"col-4 col-lg-2\">\n                        {/* Conditionally enable or disable the button depending on status */}\n                        {this.disableButton(\"None\") \n                            ?\n                            <button className=\"btn1 btn-outline-danger btn-block\" disabled={true}\n                                    onClick={this.handleClick}>None\n                            </button>\n                            :\n                            <button className=\"btn1 btn-danger btn-block\" disabled={this.props.disableButton}\n                                    onClick={this.handleClick.bind(this, \"N\")}>None\n                            </button>\n                        }\n                    </div>\n                     <div className=\"col-4 col-lg-2\">\n                        {this.disableButton(\"Some\") \n                            ?\n                            <button className=\"btn2 btn-outline-warning btn-block\" disabled={true}\n                                    onClick={this.handleClick}>Some\n                            </button>\n                            :\n                            <button className=\"btn2 btn-warning btn-block\" disabled={this.props.disableButton}\n                                    onClick={this.handleClick.bind(this, \"S\")}>Some\n                                  \n                            </button>\n                        }\n                    </div>\n                    <div className=\"col-4 col-lg-2\">\n                        {this.disableButton(\"Lots\") \n                            ?\n                            <button className=\"btn3 btn-outline-success btn-block\" disabled={true}\n                                    onClick={this.handleClick}>Lots\n                            </button>\n                            :\n                            <button className=\"btn3 btn-success btn-block\" disabled={this.props.disableButton}\n                                    onClick={this.handleClick.bind(this, \"L\")}>Lots\n                            </button>\n                        }\n                    </div>\n                    <div className=\"col-12 col-lg-3\">\n                        <p align=\"left\"> Upd {this.props.date}</p>\n                   </div>\n           </div> \n        );\n    }\n}\n\n\nexport default DisplayStatus;","import React from 'react';\nimport './App.css';\nimport DropDown from './Component/DropDown.js';\nimport DisplayStatus from './Component/DisplayStatus.js';\nimport 'moment-timezone';\nimport axios from \"axios\";\n\nlet moment = require('moment');\n\nclass App extends React.Component {\n  state = {\n    disableButton: true,\n    itemList: [],\n    itemID: \"\",\n    itemName:\"\",\n    postCode: \"M33\",\n    storeList: []\n    // storeList: [{ store: \"Tesco\", status: \"S\", date:\"01 Jan\" },\n    // { store: \"Sainsbury\", status: \"L\", date:\"02 Jan\" },\n    // { store: \"Aldi\", status: \"S\", date: \"03 Jan\" },\n    // { store: \"Quality Save\", status: \"N\", date:\"04 Jan\" },\n    // { store: \"Wilko\", status: \"N\", date:\"05 Jan\" },\n    // { store: \"B and M\", status: \"\", date: \"06 Jan\" },\n    // { store: \"SuperDrug\", status: \"L\", date: \"07 Jan\" }]\n  }\n  componentDidMount() {\n    axios.get('https://m5xyp9jfmk.execute-api.eu-west-2.amazonaws.com/dev/itemname')\n      .then((response) => {\n\n        console.log(response.data.itemData);\n\n        this.setState({\n          itemList: response.data.itemData\n        })\n      })\n      .catch(function (error) {\n        console.log(error);\n      })\n\n  };\n\n  getStatus = (tempItemName, postCode) => {\n    let tempItemId = \"\";\n\n    this.state.itemList.map(item => {\n      if (item.name === tempItemName) {\n        tempItemId = item.id;\n      }\n    });\n\n    axios.get('https://m5xyp9jfmk.execute-api.eu-west-2.amazonaws.com/dev/itemstatus/' + tempItemId + \"/\" + postCode)\n      .then((response) => {\n\n        console.log(response.data.itemData);\n\n        this.setState({\n          storeList: response.data.itemData\n        })\n      })\n      .catch(function (error) {\n        console.log(error);\n      })\n\n    this.setState({\n      itemId: tempItemId,\n      itemName: tempItemName,\n      disableButton: true\n    })\n  }\n\n  updateStatus = (storeId, status) => {\n    console.log(\"IN UPDATE STATUS\");\n    \n    let dateTime = moment().format('YYYY-MM-DD HH:mm:ss');\n    let dateTimeFormatted = moment().format('DD MMM HH:mm');\n\n    axios.put('https://m5xyp9jfmk.execute-api.eu-west-2.amazonaws.com/dev/updatequantity/' + this.state.postCode + \"/\" + storeId + \"/\" + this.state.itemId + \"/\" + status + \"/\" + dateTime)\n\n      .then(function (response) {\n        console.log(response);\n        \n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n\n    this.setState({\n      disableButton: true\n    })\n    \n    let storeListCopy = this.state.storeList.slice();\n\n    //Make a copy of the tasks array\n    //never do this.stat.tasks.push item and access it direactly as this causese\n    //a problem\n    \n    storeListCopy.map (store => {\n\n    if (store.id === storeId)\n        {\n          console.log(\"setting status\");\n          store.quantity = status;\n          store.dateformatted = dateTimeFormatted;\n        }\n    });\n    \n    this.setState({\n      storeList: storeListCopy\n    });\n  }\n\n  editItems = () => {\n    this.setState({\n      disableButton: false\n    })\n  }\n\n  render() {\n\n    return (\n\n      <div className=\"AppHeader\">\n        <h1>CheK it Out </h1>\n        <div className=\"row paddingabove\">\n              <div className=\"col-0 col-lg-12\">\n        <h5>Easliy locate essential items in M33</h5>\n        <h5>Click the edit button to update the information</h5>\n        <h5>To add items to the list drop me an email</h5>\n        </div>\n        </div>\n          <div className=\"Container\">\n            <DropDown\n              itemList={this.state.itemList}\n              label=\"Item List\"\n              key=\"1\"\n              getStatusFunc={this.getStatus}\n            />\n            <br />\n            <br />\n        </div>\n        <div className=\"Details\">\n            <div className=\"row paddingabove\">\n              <div className=\"col-12 col-lg-3\"/>\n              <div className=\"col-12 col-lg-6 paddingabove border border-dark border-thick\">\n              <br/>\n                <ol className=\"list-group \">\n                  {this.state.storeList.map(store => {\n                    return <DisplayStatus\n                      store={store.name}\n                      storeId={store.id}\n                      status={store.quantity}\n                      date={store.dateformatted}\n                      itemName={this.state.itemName}\n                      postCode={this.state.postCode}\n                      disableButton={this.state.disableButton}\n                      updateStatusFunc={this.updateStatus}\n                      getStatusFunc={this.getStatus}\n                      key={store.id}\n                    />\n                  })}\n                </ol>\n              </div>\n              <div className=\"col-12 col-lg-3\"></div>\n            </div>\n            <br />\n            <div className=\"row \">\n              <div className=\"col-12 col-lg-12 \">\n                <button>\n                  <i className=\"fa fa-edit fa-4x\"\n                    onClick={this.editItems} />\n                </button>\n              </div>\n            </div>\n            <br />\n            <div className=\"row \">\n              <div className=\"col-12 col-lg-12 \">\n                <p> email address goes here</p>\n              </div>\n            </div>\n          </div>\n        \n      </div>\n\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}